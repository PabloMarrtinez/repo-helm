source: https://github.com/FIWARE-Ops/data-space-connector
release: demo
destination_namespace: &destination dsc-demo
purpose: &purpose dsc-env
branch: &branch main
secretsEnabled: &secretsEnabled false
host: &host
tlsSecret: &tlsSecret

applications:

  - name: mysql
    enabled: true
    source_path: applications/mysql
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml

  - name: mongodb
    enabled: true
    source_path: applications/mongodb
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml

  - name: postgres
    enabled: true
    source_path: applications/postgres
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml

  - name: orion
    enabled: true
    source_path: applications/orion
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml

  - name: credentials-config-service
    enabled: true
    source_path: applications/credentials-config-service
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml

  - name: trusted-issuers-list
    enabled: true
    source_path: applications/trusted-issuers-list
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml

  - name: walt-id
    enabled: true
    source_path: applications/walt-id
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml

  - name: verifier
    enabled: true
    source_path: applications/verifier
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml

  - name: wallet
    enabled: true
    source_path: applications/wallet-ssikit
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml
 
 
#Sub-Chart configuration configuration
 
ccs:
  # Enable the deployment of application: ccs
  deploymentEnabled: true
 
  credentials-config-service:
  
    # Image
    deployment:
      image: 
        repository: quay.io/fiware/credentials-config-service
        tag: 0.0.1
  
    # Database config
    database:
      persistence: true
      host: mysql-dsc
      name: ccs
      
      # Should use Secret in production environment
      username: root
      password: "<mysql-password>"
 
mongo-db:
  # Enable the deployment of application: mongo-db
  deploymentEnabled: true
 
  mongodb:
    
    auth:
      enabled: true
      rootPassword: "<mongodb-password>"
      
    architecture: standalone
    
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
  
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
  
    persistence:
      enabled: true
      size: 8Gi
 
mysql:
  # Enable the deployment of application: mysql
  deploymentEnabled: true
 
  mysql:
    fullnameOverride: mysql-dsc
    auth:
      # Should use a Secret on production deployments
      rootPassword: "<mysql-password>"
    initdbScripts:
      create.sql: |
        CREATE DATABASE til;
        CREATE DATABASE ccs;
 
orion-ld:
  # Enable the deployment of application: orion-ld
  deploymentEnabled: true
 
  orion:
        
    broker:
      db:
        auth: 
          user: root
          password: "<mongodb-password>"
          mech: "SCRAM-SHA-1"
        hosts:
          - mongodb
  
    mongo:
      # we want to use the individually deployed mongodb
      enabled: false
 
postgres:
  # Enable the deployment of application: postgres
  deploymentEnabled: true
 
  postgresql:
    
    fullnameOverride: postgresql-dsc
    
    auth:
      # Credentials for Keycloak DB
      username: keycloak
      password: "<keycloak-password>"
      enablePostgresUser: true
  
      # Credentials for postgres admin user
      postgresPassword: "<admin-password>"
      
    # Init DB
    primary:
      initdb:
        scripts:
          create.sh: |
            psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE keycloak;"
 
packetdelivery-til:
  # Enable the deployment of application: packetdelivery-til
  deploymentEnabled: true
 
  trusted-issuers-list:
  
    # Image
    deployment:
      image:  
        tag: 0.0.3
  
    # Database config
    database:
      persistence: true
      host: mysql-dsc
      name: til
  
      # Should use Secret in production environment
      username: root
      password: "<mysql-password>"
 
vcverifier:
  # Enable the deployment of application: vcverifier
  deploymentEnabled: true
 
  vcverifier:
    
    deployment:
  
      # Image
      image:
        repository: quay.io/fiware/vcverifier
        tag: 2.0.4
        pullPolicy: Always
  
      # Logging
      logging: 
        level: DEBUG
        pathsToSkip: 
          - "/health"
  
      # Walt-id config
      ssikit:
        auditorUrl: http://walt-id-vcwaltid:7003
  
      # Verifier config
      verifier:
        # URL endpoint of data space trusted issuers registry
        tirAddress: https://tir.dataspace.com/v3/issuers
        # DID of organisation
        did: did:web:my-did:did
  
      # Config service
      configRepo:
        configEndpoint: http://dsba-packet-delivery-ccs-credentials-config-service:8080/
 
wallet:
  # Enable the deployment of application: wallet
  deploymentEnabled: true
 
  ReplicaCount: 1
  FABRIC_ENDPOINT: "192.168.49.1"
  ISSUER_PORT: 32000
  VERIFIER_PORT: 32001
  WALLET_PORT: 32002 
vcwaltid:
  # Enable the deployment of application: vcwaltid
  deploymentEnabled: true
 
  # Organisation DID
  did: did:web:my-did:did
  
  # Walt-id config
  vcwaltid:
  
    # Image
    deployment:
      image:  
        repository: quay.io/fiware/waltid
        tag: 1.14.1-SNAPSHOT
        pullPolicy: Always
  
    # API config
    api:
      core: 
        enabled: true
      auditor: 
        enabled: true
      signatory: 
        enabled: true
      custodian: 
        enabled: true
      essif: 
        enabled: true
  
    # Persistence
    persistence: 
      enabled: true
      pvc:
        size: 1Gi
  
    # List of templates to be created
    templates:
      GaiaXParticipantCredential.json: |
        {
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://registry.lab.dsba.eu/development/api/trusted-shape-registry/v1/shapes/jsonld/trustframework#"
          ],
          "type": [
            "VerifiableCredential"
          ],
          "id": "did:web:raw.githubusercontent.com:egavard:payload-sign:master",
          "issuer": "did:web:raw.githubusercontent.com:egavard:payload-sign:master",
          "issuanceDate": "2023-03-21T12:00:00.148Z",
          "credentialSubject": {
            "id": "did:web:raw.githubusercontent.com:egavard:payload-sign:master",
            "type": "gx:LegalParticipant",
            "gx:legalName": "dsba compliant participant",
            "gx:legalRegistrationNumber": {
              "gx:vatID": "MYVATID"
            },
            "gx:headquarterAddress": {
              "gx:countrySubdivisionCode": "BE-BRU"
            },
            "gx:legalAddress": {
              "gx:countrySubdivisionCode": "BE-BRU"
            },
            "gx-terms-and-conditions:gaiaxTermsAndConditions": "70c1d713215f95191a11d38fe2341faed27d19e083917bc8732ca4fea4976700"
          }
        }
